{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","pressing","event","setState","key","document","removeEventListener","this","addEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,+DAKE,WACEC,SAASC,oBAAoB,QAASC,KAAKN,YAN/C,+BASE,WACEI,SAASG,iBAAiB,QAASD,KAAKN,YAV5C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,cAAb,SACGF,KAAKR,MAAMC,WAAX,mCAC+BO,KAAKR,MAAMC,WAD1C,KAEG,kCAvBd,GAAyBU,a,MCGzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.361b38c5.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport class App extends Component {\n  state = {\n    pressedKey: '',\n  };\n\n  UNSAFE_componentWillMount() {\n    document.removeEventListener('keyup', this.pressing);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.pressing);\n  }\n\n  pressing = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App_message\">\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}